diff -Naurp e.old/EditorFrame.cpp e/EditorFrame.cpp
--- e.old/EditorFrame.cpp	2009-03-27 03:06:26.000000000 -0300
+++ e/EditorFrame.cpp	2009-03-27 03:12:04.000000000 -0300
@@ -202,7 +202,10 @@ EditorFrame::EditorFrame(CatalystWrapper
 	   m_bundleEditor(NULL), m_bundleEditorModified(false), bitmap(1,1)
 	   //,m_incommingBmp(incomming_xpm), m_incommingFullBmp(incomming_full_xpm), m_pToolBar(NULL)
 {
-       Create(NULL, id, title, rect.GetPosition(), rect.GetSize(), wxDEFAULT_FRAME_STYLE|wxNO_FULL_REPAINT_ON_RESIZE|wxWANTS_CHARS, wxT("eMainFrame"));
+	Create(NULL, id, title, rect.GetPosition(), rect.GetSize(), wxDEFAULT_FRAME_STYLE|wxNO_FULL_REPAINT_ON_RESIZE|wxWANTS_CHARS, wxT("eMainFrame"));
+
+	m_remoteThread = new RemoteThread();
+
 	// Create the dirwatcher (will not be explicitly deleted, deletes as thread on app exit)
 	m_dirWatcher = new DirWatcher();
 
@@ -970,7 +973,7 @@ void EditorFrame::CheckForModifiedFilesA
 
 	// Start separate thread checking for modified files
 	if (!changeList.empty()) {
-		new ChangeCheckerThread(changeList, *this, m_remoteThread, m_changeCheckerThread);
+		new ChangeCheckerThread(changeList, *this, GetRemoteThread(), m_changeCheckerThread);
 	}
 }
 
@@ -1636,7 +1639,7 @@ wxString EditorFrame::DownloadFile(const
 	// Download file
 	while(1) {
 		wxBeginBusyCursor();
-		const CURLcode res = m_remoteThread.Download(url, buffPath, *rp);
+		const CURLcode res = GetRemoteThread().Download(url, buffPath, *rp);
 		wxEndBusyCursor();
 
 		if (res == CURLE_LOGIN_DENIED) {
@@ -1644,7 +1647,7 @@ wxString EditorFrame::DownloadFile(const
 		}
 		else if (res != CURLE_OK) {
 			wxString msg = _T("Could not download file: ") + url;
-			msg += wxT("\n") + m_remoteThread.GetLastError();
+			msg += wxT("\n") + GetRemoteThread().GetLastError();
 			wxMessageBox(msg, _T("e Error"), wxICON_ERROR);
 			return wxEmptyString;
 		}
@@ -1656,7 +1659,7 @@ wxString EditorFrame::DownloadFile(const
 
 wxDateTime EditorFrame::GetRemoteDate(const wxString& url, const RemoteProfile* rp) {
 	wxASSERT(rp && rp->IsValid());
-	return m_remoteThread.GetModDate(url, *rp);
+	return GetRemoteThread().GetModDate(url, *rp);
 }
 
 wxString EditorFrame::GetTempPath() const {
@@ -1746,7 +1749,7 @@ bool EditorFrame::DoOpenFile(const wxStr
 			if (isBundleItem) {} // EditorCtrl does it's own check for changes
 			else if (IsRemotePath(filepath)) {
 				if (!rp) rp = GetRemoteProfile(filepath, false);
-				const wxDateTime fileDate = m_remoteThread.GetModDate(filepath, *rp);
+				const wxDateTime fileDate = GetRemoteThread().GetModDate(filepath, *rp);
 				if (modifiedDate == fileDate) doReload = false; // No need to reload unchanged file
 				else wxLogDebug(wxT("file %s needs to be reloaded"), filepath.c_str());
 			}
diff -Naurp e.old/EditorFrame.h e/EditorFrame.h
--- e.old/EditorFrame.h	2009-03-27 03:06:23.000000000 -0300
+++ e/EditorFrame.h	2009-03-27 03:07:42.000000000 -0300
@@ -225,7 +225,7 @@ public:
 	// DirWatcher & RemoteThread
 	DirWatcher& GetDirWatcher() {wxASSERT(m_dirWatcher); return *m_dirWatcher;};
 
-	RemoteThread& GetRemoteThread() {return m_remoteThread;};
+	RemoteThread& GetRemoteThread() {return *m_remoteThread;};
 
 	// Preview
 	void SetWebPreviewTitle(const wxString& title);
@@ -451,7 +451,7 @@ private:
 	CatalystWrapper m_catalyst;
 	Dispatcher& dispatcher;
 	wxImageList imageList;
-	RemoteThread m_remoteThread;
+	RemoteThread *m_remoteThread;
 	DirWatcher* m_dirWatcher;
 
 	// State
diff -Naurp e.old/ProjectPane.cpp e/ProjectPane.cpp
--- e.old/ProjectPane.cpp	2009-03-27 03:06:25.000000000 -0300
+++ e/ProjectPane.cpp	2009-03-27 03:10:50.000000000 -0300
@@ -56,8 +56,8 @@ int wxCMPFUNC_CONV wxStringSortAscending
 
 ProjectPane::ProjectPane(EditorFrame& parent, wxWindowID id)
 : wxPanel(&parent, id), m_parentFrame(parent), m_imageList(16,16), m_dirWatchHandle(NULL),
-  m_isRemote(false), m_remoteThread(parent.GetRemoteThread()), m_remoteProfile(NULL), m_busyCount(0),
-  m_newIconsCond(m_iconMutex)
+  m_isRemote(false), m_isDestroying(false),  m_remoteThread(parent.GetRemoteThread()),
+  m_remoteProfile(NULL), m_busyCount(0), m_newIconsCond(m_iconMutex)
 {
 #ifdef __WXMSW__
     m_contextMenu = NULL;
@@ -113,6 +113,18 @@ ProjectPane::ProjectPane(EditorFrame& pa
 	GetThread()->Run();
 }
 
+ProjectPane::~ProjectPane() {
+	Clear();
+
+	m_isDestroying = true;
+	// Wake up thread
+	m_iconMutex.Lock();
+	m_newIconsCond.Signal();
+	m_iconMutex.Unlock();
+	GetThread()->Wait();
+}
+
+
 bool ProjectPane::IsFocused() const {
 	return (FindFocus() == m_prjTree);
 }
@@ -2175,7 +2187,7 @@ void ProjectPane::WatchTree(const wxStri
 
 void* ProjectPane::Entry() {
 	while (1) {
-		while (!m_iconPathsForRetrieval.empty()) {
+		while (!m_isDestroying && !m_iconPathsForRetrieval.empty()) {
 			// Get path for which we should get icon
 			m_iconPathsCrit.Enter();
 				const wxString path = m_iconPathsForRetrieval.back();
@@ -2210,6 +2222,8 @@ void* ProjectPane::Entry() {
 				m_newIcons.push_back(PathIcon(path, icon));
 			m_newIconsCrit.Leave();
 		}
+		if (m_isDestroying)
+		    break;
 
 		// Wait for new actions being pushed to the list
 		wxMutexLocker lock(m_iconMutex);
diff -Naurp e.old/ProjectPane.h e/ProjectPane.h
--- e.old/ProjectPane.h	2009-03-27 03:06:25.000000000 -0300
+++ e/ProjectPane.h	2009-03-27 03:12:23.000000000 -0300
@@ -31,7 +31,7 @@ class wxDirWatcherEvent;
 class ProjectPane : public wxPanel, public wxThreadHelper {
 public:
 	ProjectPane(EditorFrame& parent, wxWindowID id = wxID_ANY);
-	~ProjectPane() {Clear();};
+	~ProjectPane();
 
 	bool IsFocused() const;
 	bool IsRemote() const {return m_isRemote;};
@@ -179,6 +179,7 @@ private:
 	wxImageList m_imageList;
 	void* m_dirWatchHandle;
 	bool m_isRemote;
+	bool m_isDestroying;
 	RemoteThread& m_remoteThread;
 	wxTreeCtrl* m_prjTree;
 	wxFileName m_prjPath;
