To build you will need to:
* Have Visual Studio 2008 C++
* Download and install wxWidgets, version 2.8.x
* Get and build everything listed in the "external" folder.

= wxWidgets =
wxWidgets is a cross-platform GUI toolkit.

* Go to http://www.wxwidgets.org/downloads/

== Installation ==
* Download the installer for wxWidgets 2.8.10 (wxMSW)
* Run the installer.
* We'll assume the standard install location of "C:\wxWidgets-2.8.10\"

== Patching ==
TODO: Notes on using the supplied patches.

== Building ==
* Reference C:\wxWidgets-2.8.10\docs\msw\install.txt for wxWidgets build instructions.
* If you build with Visual Studio GUI:
** When you open build\msw\wx.dsw, you'll be prompted to upgrade to a .sln; do this.
** Compile the appropriate library version for the version of "e" you're working:
** For Debug versions of "e": Win32 Unicode Debug  (NOT the .DLL version)

== Configuration ==
* Create a system environmental variable named "WXWIN28" set to "C:\wxWidgets-2.8.10\"  (without quotes)
** Make sure it's a system variable, and not a personal one.


= Metakit =
Metakit is a lightweight embedded database.

* Read about Metakit at http://www.equi4.com/metakit/overview.html

== Installation ==
* The easiest way to get Metakit sources is to use Subversion.
* In e/external:
* svn export svn://www.equi4.com/metakit/trunk metakit

== Building ==
* Open "metakit\win\msvc60\mksrc.sln" and allow the .sln to be upgraded for VS2008.
* Change the configuration to "Debug" (not Debug MFC or Debug STD, just plain "Debug")
* The Python and Tcl bindings for Metakit will fail to build (unless you set them up);
  that's OK as e doesn't use them.
